{"ast":null,"code":"import http from \"../http-common\";\nlet root = \"/autenticazione.php\";\n\nconst getMetodiAutenticazioneSupportati = jsonBody => {\n  const params = new URLSearchParams([[\"nomeMetodo\", \"getMetodiAutenticazioneSupportati\"]]);\n  return http.post(root, jsonBody, {\n    params\n  });\n};\n\nconst effettuaAutenticazione = jsonBody => {\n  const params = new URLSearchParams([[\"nomeMetodo\", \"effettuaAutenticazione\"]]);\n  return http.post(root, jsonBody, {\n    params\n  });\n};\n\nconst confermaAutenticazione = jsonBody => {\n  const params = new URLSearchParams([[\"nomeMetodo\", \"confermaAutenticazione\"]]);\n  return http.post(root, jsonBody, {\n    params\n  });\n};\n\nconst generaQrCode = () => {\n  const params = new URLSearchParams([[\"nomeMetodo\", \"generaQrCode\"]]);\n  return http.get(root, {\n    params\n  });\n};\n\nconst recuperaTokenDaQrCode = idQrCode => {\n  const params = new URLSearchParams([[\"nomeMetodo\", \"recuperaTokenDaQrCode\"], [\"idQrCode\", idQrCode]]);\n  return http.get(root, {\n    params\n  });\n};\n\nconst recuperaTokenDaLogin = idLogin => {\n  const params = new URLSearchParams([[\"nomeMetodo\", \"recuperaTokenDaLogin\"], [\"idLogin\", idLogin]]);\n  return http.get(root, {\n    params\n  });\n};\n\nconst autenticazioneService = {\n  getMetodiAutenticazioneSupportati,\n  generaQrCode,\n  recuperaTokenDaQrCode,\n  effettuaAutenticazione,\n  recuperaTokenDaLogin,\n  confermaAutenticazione\n};\nexport default autenticazioneService;","map":{"version":3,"names":["http","root","getMetodiAutenticazioneSupportati","jsonBody","params","URLSearchParams","post","effettuaAutenticazione","confermaAutenticazione","generaQrCode","get","recuperaTokenDaQrCode","idQrCode","recuperaTokenDaLogin","idLogin","autenticazioneService"],"sources":["C:/sviluppo/progetti-react/otter-guardian-authenticator/src/services/AutenticazioneService.tsx"],"sourcesContent":["import http from \"../http-common\";\r\n\r\nlet root = \"/autenticazione.php\";\r\n\r\n\r\n\r\nconst getMetodiAutenticazioneSupportati = (jsonBody: any) => {\r\n    const params = new URLSearchParams([[\"nomeMetodo\", \"getMetodiAutenticazioneSupportati\"]]);\r\n    return http.post(root,jsonBody, { params });\r\n}\r\n\r\nconst effettuaAutenticazione = (jsonBody: any) => {\r\n    const params = new URLSearchParams([[\"nomeMetodo\", \"effettuaAutenticazione\"]]);\r\n    return http.post(root,jsonBody, { params });\r\n}\r\n\r\nconst confermaAutenticazione = (jsonBody: any) => {\r\n    const params = new URLSearchParams([[\"nomeMetodo\", \"confermaAutenticazione\"]]);\r\n    return http.post(root,jsonBody, { params });\r\n}\r\n\r\nconst generaQrCode = () => {\r\n    const params = new URLSearchParams([[\"nomeMetodo\", \"generaQrCode\"]]);\r\n    return http.get(root, { params });\r\n}\r\n\r\nconst recuperaTokenDaQrCode = (idQrCode: any) => {\r\n    const params = new URLSearchParams([[\"nomeMetodo\", \"recuperaTokenDaQrCode\"],[\"idQrCode\",idQrCode]]);\r\n    return http.get(root, { params });\r\n}\r\n\r\nconst recuperaTokenDaLogin = (idLogin: any) => {\r\n    const params = new URLSearchParams([[\"nomeMetodo\", \"recuperaTokenDaLogin\"],[\"idLogin\",idLogin]]);\r\n    return http.get(root, { params });\r\n}\r\n\r\n\r\nconst autenticazioneService = {\r\n    getMetodiAutenticazioneSupportati,\r\n    generaQrCode,\r\n    recuperaTokenDaQrCode,\r\n    effettuaAutenticazione,\r\n    recuperaTokenDaLogin,\r\n    confermaAutenticazione\r\n\r\n};\r\nexport default autenticazioneService;"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;AAEA,IAAIC,IAAI,GAAG,qBAAX;;AAIA,MAAMC,iCAAiC,GAAIC,QAAD,IAAmB;EACzD,MAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB,CAAC,CAAC,YAAD,EAAe,mCAAf,CAAD,CAApB,CAAf;EACA,OAAOL,IAAI,CAACM,IAAL,CAAUL,IAAV,EAAeE,QAAf,EAAyB;IAAEC;EAAF,CAAzB,CAAP;AACH,CAHD;;AAKA,MAAMG,sBAAsB,GAAIJ,QAAD,IAAmB;EAC9C,MAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB,CAAC,CAAC,YAAD,EAAe,wBAAf,CAAD,CAApB,CAAf;EACA,OAAOL,IAAI,CAACM,IAAL,CAAUL,IAAV,EAAeE,QAAf,EAAyB;IAAEC;EAAF,CAAzB,CAAP;AACH,CAHD;;AAKA,MAAMI,sBAAsB,GAAIL,QAAD,IAAmB;EAC9C,MAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB,CAAC,CAAC,YAAD,EAAe,wBAAf,CAAD,CAApB,CAAf;EACA,OAAOL,IAAI,CAACM,IAAL,CAAUL,IAAV,EAAeE,QAAf,EAAyB;IAAEC;EAAF,CAAzB,CAAP;AACH,CAHD;;AAKA,MAAMK,YAAY,GAAG,MAAM;EACvB,MAAML,MAAM,GAAG,IAAIC,eAAJ,CAAoB,CAAC,CAAC,YAAD,EAAe,cAAf,CAAD,CAApB,CAAf;EACA,OAAOL,IAAI,CAACU,GAAL,CAAST,IAAT,EAAe;IAAEG;EAAF,CAAf,CAAP;AACH,CAHD;;AAKA,MAAMO,qBAAqB,GAAIC,QAAD,IAAmB;EAC7C,MAAMR,MAAM,GAAG,IAAIC,eAAJ,CAAoB,CAAC,CAAC,YAAD,EAAe,uBAAf,CAAD,EAAyC,CAAC,UAAD,EAAYO,QAAZ,CAAzC,CAApB,CAAf;EACA,OAAOZ,IAAI,CAACU,GAAL,CAAST,IAAT,EAAe;IAAEG;EAAF,CAAf,CAAP;AACH,CAHD;;AAKA,MAAMS,oBAAoB,GAAIC,OAAD,IAAkB;EAC3C,MAAMV,MAAM,GAAG,IAAIC,eAAJ,CAAoB,CAAC,CAAC,YAAD,EAAe,sBAAf,CAAD,EAAwC,CAAC,SAAD,EAAWS,OAAX,CAAxC,CAApB,CAAf;EACA,OAAOd,IAAI,CAACU,GAAL,CAAST,IAAT,EAAe;IAAEG;EAAF,CAAf,CAAP;AACH,CAHD;;AAMA,MAAMW,qBAAqB,GAAG;EAC1Bb,iCAD0B;EAE1BO,YAF0B;EAG1BE,qBAH0B;EAI1BJ,sBAJ0B;EAK1BM,oBAL0B;EAM1BL;AAN0B,CAA9B;AASA,eAAeO,qBAAf"},"metadata":{},"sourceType":"module"}